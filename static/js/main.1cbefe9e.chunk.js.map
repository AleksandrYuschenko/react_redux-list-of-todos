{"version":3,"sources":["app/hooks.ts","features/currentTodo.ts","components/TodoList/TodoList.tsx","features/filter.ts","components/TodoFilter/TodoFilter.tsx","api.ts","features/todos.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","app/store.ts","index.tsx"],"names":["useAppSelector","useDispatch","useSelector","actions","todo","type","payload","currentTodoReducer","state","action","filteredTodosSelector","todos","filter","query","status","preparedTitle","title","toLocaleLowerCase","preparedQuery","preparedStatus","isQueryMatched","includes","isStatusMatched","completed","TodoList","visibleTodos","dispatch","length","className","map","id","classNames","onClick","setSelectedToDo","initialState","filterReducer","setQueryActionCreator","TodoFilter","onSubmit","event","preventDefault","value","onChange","setStatusActionCreator","target","placeholder","e","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodosActionType","Loader","TodoModal","useState","user","setUser","curToDo","currentTodo","useEffect","userId","slectedUser","href","email","name","SetTodos","todosReducer","todosState","App","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cbefe9e.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    // Implement all actions here\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\nconst filteredTodosSelector = (state: RootState) => {\n  const { todos } = state;\n  const { query, status } = state.filter;\n\n  return todos.filter(todo => {\n    const preparedTitle = todo.title.toLocaleLowerCase();\n    const preparedQuery = query.toLocaleLowerCase();\n    const preparedStatus = status === 'completed';\n\n    const isQueryMatched = preparedTitle.includes(preparedQuery);\n    const isStatusMatched = status === 'all'\n      ? true\n      : todo.completed === preparedStatus;\n\n    return isQueryMatched && isStatusMatched;\n  });\n};\n\nexport const TodoList: React.FC = () => {\n  const visibleTodos = useAppSelector(filteredTodosSelector);\n  const dispatch = useDispatch();\n  const setSelectedToDo = (todo: Todo) => {\n    dispatch(actions.setTodo(todo));\n  };\n\n  return (\n    <>\n      {visibleTodos.length === 0 && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visibleTodos.map(todo => (\n            <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              {todo.completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )\n                : (<td className=\"is-vcentered\"> </td>)}\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(\n                  { 'has-text-danger': !todo.completed },\n                  { 'has-text-success': todo.completed },\n                )}\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedToDo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n\n          {/* <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">1</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">delectus aut autem</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">2</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\" className=\"has-background-info-light\">\n            <td className=\"is-vcentered\">3</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">fugiat veniam minus</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">4</td>\n            <td className=\"is-vcentered\"><span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span></td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">et porro tempora</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">5</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">laboriosam mollitia et enim quasi adipisci quia provident illum</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">6</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">qui ullam ratione quibusdam voluptatem quia omnis</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">7</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">illo expedita consequatur quia in</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">8</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">9</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">molestiae perspiciatis ipsa</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">10</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">illo est ratione doloremque quia maiores aut</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr> */}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { Status } from '../types/Status';\n\nexport interface State {\n  query: string,\n  status: Status,\n}\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\nexport type SetQueryAction = {\n  type: 'filter/set-query',\n  payload: string,\n};\n\nexport type SetStatusAction = {\n  type: 'filter/set-status',\n  payload: Status,\n};\n\nexport type Actions = SetQueryAction | SetStatusAction;\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Actions,\n): State => {\n  switch (action.type) {\n    case 'filter/set-query':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'filter/set-status':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n\nexport const setQueryActionCreator = (query: string):SetQueryAction => ({\n  type: 'filter/set-query',\n  payload: query,\n});\n\nexport const setStatusActionCreator = (status: Status):SetStatusAction => ({\n  type: 'filter/set-status',\n  payload: status,\n});\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport {\n  setQueryActionCreator, setStatusActionCreator,\n} from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const { status, query } = useAppSelector(state => state.filter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              dispatch(setStatusActionCreator(event.target.value as Status));\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => dispatch(setQueryActionCreator(e.target.value))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(setQueryActionCreator(''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { Action as BaseAction } from 'redux';\nimport { Todo } from '../types/Todo';\n\ninterface Action<T, P> extends BaseAction<T> {\n  payload: P,\n}\n\nexport enum TodosActionType {\n  SetTodos = 'todos/set_todos',\n}\n\nexport type SetTodosAction = Action<TodosActionType.SetTodos, Todo[]>;\n\ntype TodosActions = SetTodosAction;\n\nconst setTodosActonCreator = (todos: Todo[]): SetTodosAction => ({\n  type: TodosActionType.SetTodos,\n  payload: todos,\n});\n\nexport const actions = {\n  set: setTodosActonCreator,\n};\n\nconst todosReducer = (\n  todosState: Todo[] = [],\n  action: TodosActions,\n): Todo[] => {\n  switch (action.type) {\n    case TodosActionType.SetTodos:\n      return action.payload;\n    default:\n      return todosState;\n  }\n};\n\nexport default todosReducer;\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>();\n  const curToDo = useAppSelector(state => state.currentTodo);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (curToDo) {\n      getUser(curToDo.userId)\n        .then(slectedUser => setUser(slectedUser));\n    }\n  }, [curToDo]);\n\n  return (\n    curToDo && (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {!user && <Loader />}\n\n        {user && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${curToDo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setUser(null);\n                  dispatch(actions.removeTodo());\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{curToDo.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* For not completed */}\n                {!curToDo.completed\n                  && <strong className=\"has-text-danger\">Planned</strong>}\n\n                {/* For completed */}\n                {curToDo.completed\n                  && <strong className=\"has-text-success\">Done</strong>}\n                {' by '}\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\nimport { useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useAppSelector(state => state.todos);\n\n  useEffect(() => {\n    getTodos().then(res => dispatch(actions.set(res)));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal />\n    </>\n  );\n};\n","import {\n  legacy_createStore as createStore, applyMiddleware, combineReducers,\n} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer, { State } from '../features/filter';\nimport todosReducer from '../features/todos';\nimport { Todo } from '../types/Todo';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nconst todosSelector = (state: RootState): Todo[] => state.todos;\nconst filterSelector = (state: RootState): State => state.filter;\n\nexport const STORE_SELECTOR = {\n  todos: todosSelector,\n  filter: filterSelector,\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\nimport { store } from './app/store';\nimport './App.scss';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}